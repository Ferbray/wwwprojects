<Application x:Class="wdskills.WPF.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:wdskills.WPF" xmlns:conv="clr-namespace:wdskills.WPF.Core"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <local:ViewModelLocator x:Key="ViewModelLocator"/>
        <conv:IsNullConverter x:Key="isNullConverter"/>
        <conv:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <conv:ImageSourceConverter x:Key="imageSourceConverter"/>
        <Style TargetType="Grid">
            <Setter Property="Background" Value="White" />
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="Black" />
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Width" Value="180px"></Setter>
            <Setter Property="Height" Value="40px"></Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Background" Value="#76E383" />
            <Setter Property="Width" Value="300px"/>
            <Setter Property="Height" Value="30px"/>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="FontSize" Value="18" />
            <Setter Property="BorderBrush" Value="Black"/>
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="Background" Value="#76E383" />
            <Setter Property="Width" Value="300px"/>
            <Setter Property="Height" Value="30px"/>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="FontSize" Value="18" />
            <Setter Property="BorderBrush" Value="Black"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="FontFamily" Value="Comic Sans MS"/>
            <Setter Property="Background" Value="#498C51"/>
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Width" Value="300px"/>
            <Setter Property="Height" Value="40px"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#76E383"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TextBlockTittle">
            <Setter Property="Control.FontFamily" Value="Comic Sans MS"/>
            <Setter Property="Control.FontSize" Value="24" />
            <Setter Property="Control.Foreground" Value="Black" />
            <Setter Property="Control.VerticalAlignment" Value="Center"/>
            <Setter Property="Control.HorizontalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="ButtonLink">
            <Setter Property="Control.FontFamily" Value="Comic Sans MS"/>
            <Setter Property="Control.FontSize" Value="14" />
            <Setter Property="Control.Foreground" Value="Black" />
            <Setter Property="Control.Cursor" Value="Hand" />
            <Setter Property="Control.HorizontalAlignment" Value="Center"/>
            <Setter Property="Control.Background" Value="Transparent"/>
            <Setter Property="Control.BorderBrush" Value="Transparent"/>
            <Setter Property="Control.BorderThickness" Value="0"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="Transparent"/>
                    <Setter Property="Control.Foreground" Value="#498C51"/>

                    <Setter Property="Control.Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="StyleListBox" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="50px 0 50px 0"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        </Style>
        <Style TargetType="ListBoxItem">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Height" Value="100px"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="#76E383"/>
                                <Setter Property="BorderThickness" Value="3"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="#498C51"/>
                                <Setter Property="BorderThickness" Value="3"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" Value="#498C51"/>
                                <Setter Property="BorderThickness" Value="3"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxItemButton">
            <Setter Property="Control.FontFamily" Value="Comic Sans MS"/>
            <Setter Property="Control.Background" Value="#498C51"/>
            <Setter Property="Control.Cursor" Value="Hand" />
            <Setter Property="Control.Foreground" Value="Black"/>
            <Setter Property="Control.FontSize" Value="16"/>
            <Setter Property="Control.Width" Value="100px"/>
            <Setter Property="Control.HorizontalAlignment" Value="Center"/>
            <Setter Property="Control.Height" Value="40px"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Black" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="#76E383"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="HeaderStyleListView" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Visibility" Value="Collapsed" />
        </Style>
        <Style x:Key="StyleListView" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="White" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.BorderBrush" Value="#76E383"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="GridIsAvailableStyle" TargetType="{x:Type Grid}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Background" Value="White"/>
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#76E383"/>
                </Trigger>
                <Trigger Property="Selector.IsSelected" Value="True">
                    <Setter Property="Background" Value="#498C51"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ImageIsAvailableStyle" TargetType="{x:Type Image}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Control.Background" Value="White"/>
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Control.Background" Value="#76E383"/>
                </Trigger>
                <Trigger Property="Selector.IsSelected" Value="True">
                    <Setter Property="Control.Background" Value="#498C51"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="AddInfoIsAvailableStyle" TargetType="{x:Type Grid}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Background" Value="White"/>
            <Style.Triggers>
                <Trigger Property="Control.IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#76E383"/>
                </Trigger>
                <Trigger Property="Selector.IsSelected" Value="True">
                    <Setter Property="Background" Value="#498C51"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
